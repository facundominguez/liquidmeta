1:1-1:1::$trModule :: "GHC.Types.Module"
57:1-57:12::isTermValue :: "x1:STLC.Term -> {VV : GHC.Types.Bool | VV == isTermValue x1}"
57:22-57:26::True :: "{v : GHC.Types.Bool | v\n                      && v == True}"
58:22-58:27::False :: "{v : GHC.Types.Bool | not v\n                      && v == False}"
62:1-62:5::vars :: "x1:STLC.Term -> {VV : (Data.Set.Internal.Set [GHC.Types.Char]) | VV == vars x1}"
62:15-62:28::singleton :: "forall a .\nx1:a -> {v : (Data.Set.Internal.Set a) | v == Set_sng x1}"
62:27-62:28::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
63:15-63:22::_ :: "forall a .\n{v : (Data.Set.Internal.Set a) | Set_emp v\n                                 && v == empty}"
67:1-67:3::fv :: "x1:STLC.Pred -> {VV : (Data.Set.Internal.Set [GHC.Types.Char]) | VV == fv x1}"
67:18-67:25::_ :: "forall a .\n{v : (Data.Set.Internal.Set a) | Set_emp v\n                                 && v == empty}"
68:18-68:41::$dOrd_a3iH :: "{v : (GHC.Classes.Ord [GHC.Types.Char]) | v == $dOrd_a3iH}"
68:26-68:33::lq_anf$##7205759403792808515 :: "{v : (Data.Set.Internal.Set [GHC.Types.Char]) | v == fv p1}"
68:30-68:32::p1 :: "{v : STLC.Pred | v == p1}"
68:34-68:41::lq_anf$##7205759403792808516 :: "{v : (Data.Set.Internal.Set [GHC.Types.Char]) | v == fv p2}"
68:38-68:40::p2 :: "{v : STLC.Pred | v == p2}"
69:18-69:41::$dOrd_a3iH :: "{v : (GHC.Classes.Ord [GHC.Types.Char]) | v == $dOrd_a3iH}"
69:26-69:33::lq_anf$##7205759403792808517 :: "{v : (Data.Set.Internal.Set [GHC.Types.Char]) | v == fv p1}"
69:30-69:32::p1 :: "{v : STLC.Pred | v == p1}"
69:34-69:41::lq_anf$##7205759403792808518 :: "{v : (Data.Set.Internal.Set [GHC.Types.Char]) | v == fv p2}"
69:38-69:40::p2 :: "{v : STLC.Pred | v == p2}"
70:18-70:23::fv :: "x1:STLC.Pred -> {VV : (Data.Set.Internal.Set [GHC.Types.Char]) | VV == fv x1}"
70:21-70:23::p1 :: "{v : STLC.Pred | v == p1}"
71:18-71:45::$dOrd_a3iH :: "{v : (GHC.Classes.Ord [GHC.Types.Char]) | v == $dOrd_a3iH}"
71:26-71:35::lq_anf$##7205759403792808519 :: "{v : (Data.Set.Internal.Set [GHC.Types.Char]) | v == vars t1}"
71:32-71:34::t1 :: "{v : STLC.Term | v == t1}"
71:36-71:45::lq_anf$##7205759403792808520 :: "{v : (Data.Set.Internal.Set [GHC.Types.Char]) | v == vars t2}"
71:42-71:44::t2 :: "{v : STLC.Term | v == t2}"
72:18-72:45::$dOrd_a3iH :: "{v : (GHC.Classes.Ord [GHC.Types.Char]) | v == $dOrd_a3iH}"
72:26-72:35::lq_anf$##7205759403792808521 :: "{v : (Data.Set.Internal.Set [GHC.Types.Char]) | v == vars t1}"
72:32-72:34::t1 :: "{v : STLC.Term | v == t1}"
72:36-72:45::lq_anf$##7205759403792808522 :: "{v : (Data.Set.Internal.Set [GHC.Types.Char]) | v == vars t2}"
72:42-72:44::t2 :: "{v : STLC.Term | v == t2}"
77:1-77:5::bval :: "{p : STLC.Pred | fv p == Set_empty 0} -> GHC.Types.Bool"
77:30-77:31::b :: "{v : GHC.Types.Bool | v == b}"
78:30-78:39::lq_anf$##7205759403792808535 :: "{v : GHC.Types.Bool | v == bval p1}"
78:36-78:38::p1 :: "{v : STLC.Pred | v == p1}"
78:43-78:52::lq_anf$##7205759403792808536 :: "{v : GHC.Types.Bool | v == bval p2}"
78:49-78:51::p2 :: "{v : STLC.Pred | v == p2}"
79:30-79:39::lq_anf$##7205759403792808537 :: "{v : GHC.Types.Bool | v == bval p1}"
79:36-79:38::p1 :: "{v : STLC.Pred | v == p1}"
79:43-79:52::lq_anf$##7205759403792808538 :: "{v : GHC.Types.Bool | v == bval p2}"
79:49-79:51::p2 :: "{v : STLC.Pred | v == p2}"
80:30-80:43::not :: "x1:GHC.Types.Bool -> {v : GHC.Types.Bool | v <=> not x1}"
80:34-80:43::lq_anf$##7205759403792808539 :: "{v : GHC.Types.Bool | v == bval p1}"
80:40-80:42::p1 :: "{v : STLC.Pred | v == p1}"
81:30-81:32::n1 :: "{v : GHC.Types.Int | v == n1}"
81:36-81:38::n2 :: "{v : GHC.Types.Int | v == n2}"
82:30-82:32::n1 :: "{v : GHC.Types.Int | v == n1}"
82:36-82:38::n2 :: "{v : GHC.Types.Int | v == n2}"
86:1-86:7::bsubst :: "x1:[GHC.Types.Char] -> x2:STLC.Term -> x3:STLC.Pred -> {VV : STLC.Pred | VV == bsubst x1 x2 x3}"
86:8-86:9::x :: "[GHC.Types.Char]"
86:10-86:11::t :: "STLC.Term"
86:33-86:37::Bc :: "x1:GHC.Types.Bool -> {v : STLC.Pred | Bc##lqdc##$select v == x1\n                                      && v == Bc x1}"
86:36-86:37::b :: "{v : GHC.Types.Bool | v == b}"
87:33-87:68::And :: "x1:STLC.Pred -> x2:STLC.Pred -> {v : STLC.Pred | And##lqdc##$select v == x2\n                                                 && And##lqdc##$select v == x1\n                                                 && v == And x1 x2}"
87:37-87:52::lq_anf$##7205759403792808566 :: "{v : STLC.Pred | v == bsubst x t p1}"
87:45-87:46::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
87:47-87:48::t :: "{v : STLC.Term | v == t}"
87:49-87:51::p1 :: "{v : STLC.Pred | v == p1}"
87:53-87:68::lq_anf$##7205759403792808567 :: "{v : STLC.Pred | v == bsubst x t p2}"
87:61-87:62::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
87:63-87:64::t :: "{v : STLC.Term | v == t}"
87:65-87:67::p2 :: "{v : STLC.Pred | v == p2}"
88:33-88:68::Or :: "x1:STLC.Pred -> x2:STLC.Pred -> {v : STLC.Pred | Or##lqdc##$select v == x2\n                                                 && Or##lqdc##$select v == x1\n                                                 && v == Or x1 x2}"
88:37-88:52::lq_anf$##7205759403792808568 :: "{v : STLC.Pred | v == bsubst x t p1}"
88:45-88:46::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
88:47-88:48::t :: "{v : STLC.Term | v == t}"
88:49-88:51::p1 :: "{v : STLC.Pred | v == p1}"
88:53-88:68::lq_anf$##7205759403792808569 :: "{v : STLC.Pred | v == bsubst x t p2}"
88:61-88:62::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
88:63-88:64::t :: "{v : STLC.Term | v == t}"
88:65-88:67::p2 :: "{v : STLC.Pred | v == p2}"
89:33-89:51::Not :: "x1:STLC.Pred -> {v : STLC.Pred | Not##lqdc##$select v == x1\n                                 && v == Not x1}"
89:37-89:51::lq_anf$##7205759403792808570 :: "{v : STLC.Pred | v == bsubst x t p}"
89:45-89:46::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
89:47-89:48::t :: "{v : STLC.Term | v == t}"
89:49-89:50::p :: "{v : STLC.Pred | v == p}"
90:33-90:70::Leq :: "x1:STLC.Term -> x2:STLC.Term -> {v : STLC.Pred | Leq##lqdc##$select v == x2\n                                                 && Leq##lqdc##$select v == x1\n                                                 && v == Leq x1 x2}"
90:37-90:53::lq_anf$##7205759403792808571 :: "{v : STLC.Term | v == tmsubst x t t1}"
90:46-90:47::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
90:48-90:49::t :: "{v : STLC.Term | v == t}"
90:50-90:52::t1 :: "{v : STLC.Term | v == t1}"
90:54-90:70::lq_anf$##7205759403792808572 :: "{v : STLC.Term | v == tmsubst x t t2}"
90:63-90:64::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
90:65-90:66::t :: "{v : STLC.Term | v == t}"
90:67-90:69::t2 :: "{v : STLC.Term | v == t2}"
91:33-91:70::Eq :: "x1:STLC.Term -> x2:STLC.Term -> {v : STLC.Pred | Eq##lqdc##$select v == x2\n                                                 && Eq##lqdc##$select v == x1\n                                                 && v == Eq x1 x2}"
91:37-91:53::lq_anf$##7205759403792808573 :: "{v : STLC.Term | v == tmsubst x t t1}"
91:46-91:47::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
91:48-91:49::t :: "{v : STLC.Term | v == t}"
91:50-91:52::t1 :: "{v : STLC.Term | v == t1}"
91:54-91:70::lq_anf$##7205759403792808574 :: "{v : STLC.Term | v == tmsubst x t t2}"
91:63-91:64::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
91:65-91:66::t :: "{v : STLC.Term | v == t}"
91:67-91:69::t2 :: "{v : STLC.Term | v == t2}"
95:1-95:8::tmsubst :: "x1:[GHC.Types.Char] -> x2:STLC.Term -> x3:STLC.Term -> {VV : STLC.Term | VV == tmsubst x1 x2 x3}"
95:9-95:10::x :: "[GHC.Types.Char]"
95:27-95:28::z :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == z}"
95:32-95:33::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
95:39-95:43::Iv :: "x1:[GHC.Types.Char] -> {v : STLC.Term | Iv##lqdc##$select v == x1\n                                        && v == Iv x1}"
95:42-95:43::y :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == y}"
96:39-96:43::Iv :: "x1:[GHC.Types.Char] -> {v : STLC.Term | Iv##lqdc##$select v == x1\n                                        && v == Iv x1}"
96:42-96:43::z :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == z}"
97:39-97:43::Ic :: "x1:GHC.Types.Int -> {v : STLC.Term | Ic##lqdc##$select v == x1\n                                     && v == Ic x1}"
97:42-97:43::n :: "{v : GHC.Types.Int | v == n}"
98:39-98:43::Ic :: "x1:GHC.Types.Int -> {v : STLC.Term | Ic##lqdc##$select v == x1\n                                     && v == Ic x1}"
98:42-98:43::c :: "{v : GHC.Types.Int | v == c}"
114:1-114:8::isValue :: "x1:STLC.Expr -> {VV : GHC.Types.Bool | VV == isValue x1}"
114:24-114:28::True :: "{v : GHC.Types.Bool | v\n                      && v == True}"
115:24-115:28::True :: "{v : GHC.Types.Bool | v\n                      && v == True}"
116:24-116:28::True :: "{v : GHC.Types.Bool | v\n                      && v == True}"
117:24-117:29::False :: "{v : GHC.Types.Bool | not v\n                      && v == False}"
122:1-122:6::subst :: "[GHC.Types.Char] -> {v : STLC.Expr | isValue v} -> STLC.Expr -> STLC.Expr"
122:7-122:8::x :: "[GHC.Types.Char]"
122:9-122:10::v :: "{v : STLC.Expr | isValue v}"
122:32-122:35::C :: "x1:GHC.Types.Int -> {v : STLC.Expr | C##lqdc##$select v == x1\n                                     && v == C x1}"
122:34-122:35::n :: "{v : GHC.Types.Int | v == n}"
123:19-123:20::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
123:24-123:25::y :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == y}"
123:32-123:33::v :: "{v' : STLC.Expr | isValue v'\n                  && v' == v}"
124:32-124:35::V :: "x1:[GHC.Types.Char] -> {v : STLC.Expr | V##lqdc##$select v == x1\n                                        && v == V x1}"
124:34-124:35::y :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == y}"
125:32-125:54::Lambda :: "x1:[GHC.Types.Char] -> x2:STLC.Expr -> {v : STLC.Expr | Lambda##lqdc##$select v == x2\n                                                        && Lambda##lqdc##$select v == x1\n                                                        && v == Lambda x1 x2}"
125:39-125:40::y :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == y}"
125:41-125:54::lq_anf$##7205759403792808647 :: "{v' : STLC.Expr | v' == subst x v e}"
125:48-125:49::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
125:50-125:51::v :: "{v' : STLC.Expr | isValue v'\n                  && v' == v}"
125:52-125:53::e :: "{v : STLC.Expr | v == e}"
126:32-126:64::App :: "x1:STLC.Expr -> x2:STLC.Expr -> {v : STLC.Expr | App##lqdc##$select v == x2\n                                                 && App##lqdc##$select v == x1\n                                                 && v == App x1 x2}"
126:36-126:49::lq_anf$##7205759403792808648 :: "{v' : STLC.Expr | v' == subst x v e}"
126:43-126:44::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
126:45-126:46::v :: "{v' : STLC.Expr | isValue v'\n                  && v' == v}"
126:47-126:48::e :: "{v : STLC.Expr | v == e}"
126:50-126:64::lq_anf$##7205759403792808649 :: "{v' : STLC.Expr | v' == subst x v v'}"
126:57-126:58::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
126:59-126:60::v :: "{v' : STLC.Expr | isValue v'\n                  && v' == v}"
126:61-126:63::v' :: "{v : STLC.Expr | v == v'}"
127:32-127:67::Let :: "x1:[GHC.Types.Char] -> x2:STLC.Expr -> x3:STLC.Expr -> {v : STLC.Expr | Let##lqdc##$select v == x3\n                                                                        && Let##lqdc##$select v == x2\n                                                                        && Let##lqdc##$select v == x1\n                                                                        && v == Let x1 x2 x3}"
127:36-127:37::y :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == y}"
127:38-127:52::lq_anf$##7205759403792808650 :: "{v' : STLC.Expr | v' == subst x v e1}"
127:45-127:46::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
127:47-127:48::v :: "{v' : STLC.Expr | isValue v'\n                  && v' == v}"
127:49-127:51::e1 :: "{v : STLC.Expr | v == e1}"
127:53-127:67::lq_anf$##7205759403792808651 :: "{v' : STLC.Expr | v' == subst x v e2}"
127:60-127:61::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
127:62-127:63::v :: "{v' : STLC.Expr | isValue v'\n                  && v' == v}"
127:64-127:66::e2 :: "{v : STLC.Expr | v == e2}"
128:32-128:53::Annot :: "x1:STLC.Expr -> x2:STLC.Type -> {v : STLC.Expr | Annot##lqdc##$select v == x2\n                                                 && Annot##lqdc##$select v == x1\n                                                 && v == Annot x1 x2}"
128:38-128:51::lq_anf$##7205759403792808652 :: "{v' : STLC.Expr | v' == subst x v e}"
128:45-128:46::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
128:47-128:48::v :: "{v' : STLC.Expr | isValue v'\n                  && v' == v}"
128:49-128:50::e :: "{v : STLC.Expr | v == e}"
128:52-128:53::t :: "{v : STLC.Type | v == t}"
156:1-156:6::tsize :: "x1:STLC.Type -> {VV : GHC.Types.Int | VV == tsize x1}"
156:27-156:28::lq_anf$##7205759403792808654 :: "{v : GHC.Prim.Int# | v == 0}"
157:27-157:28::lq_anf$##7205759403792808655 :: "{v : GHC.Prim.Int# | v == 0}"
158:27-158:36::lq_anf$##7205759403792808656 :: "{v : GHC.Types.Int | v == tsize t}"
158:34-158:35::t :: "{v : STLC.Type | v == t}"
158:39-158:40::lq_anf$##7205759403792808658 :: "GHC.Types.Int"
159:27-159:36::lq_anf$##7205759403792808659 :: "{v : GHC.Types.Int | v == tsize t}"
159:34-159:35::t :: "{v : STLC.Type | v == t}"
159:39-159:40::lq_anf$##7205759403792808661 :: "GHC.Types.Int"
163:1-163:6::erase :: "x1:STLC.Type -> {VV : STLC.BType | VV == erase x1}"
163:27-163:35::BTBase :: "x1:STLC.Base -> {v : STLC.BType | BTBase##lqdc##$select v == x1\n                                  && v == BTBase x1}"
163:34-163:35::b :: "{v : STLC.Base | v == b}"
164:27-164:35::BTBase :: "x1:STLC.Base -> {v : STLC.BType | BTBase##lqdc##$select v == x1\n                                  && v == BTBase x1}"
164:34-164:35::b :: "{v : STLC.Base | v == b}"
165:27-165:55::BTFunc :: "x1:STLC.BType -> x2:STLC.BType -> {v : STLC.BType | BTFunc##lqdc##$select v == x2\n                                                    && BTFunc##lqdc##$select v == x1\n                                                    && v == BTFunc x1 x2}"
165:34-165:45::lq_anf$##7205759403792808663 :: "{v : STLC.BType | v == erase t_x}"
165:41-165:44::t_x :: "{v : STLC.Type | v == t_x}"
165:46-165:55::lq_anf$##7205759403792808664 :: "{v : STLC.BType | v == erase t}"
165:53-165:54::t :: "{v : STLC.Type | v == t}"
166:27-166:36::erase :: "x1:STLC.Type -> {VV : STLC.BType | VV == erase x1}"
166:34-166:35::t :: "{v : STLC.Type | v == t}"
170:1-170:5::free :: "x1:STLC.Type -> {VV : (Data.Set.Internal.Set [GHC.Types.Char]) | VV == free x1}"
170:27-170:34::_ :: "forall a .\n{v : (Data.Set.Internal.Set a) | Set_emp v\n                                 && v == empty}"
171:27-171:62::$dOrd_a3iT :: "{v : (GHC.Classes.Ord [GHC.Types.Char]) | v == $dOrd_a3iT}"
171:40-171:46::lq_anf$##7205759403792808524 :: "{v : (Data.Set.Internal.Set [GHC.Types.Char]) | v == fv r}"
171:44-171:45::r :: "{v : STLC.Pred | v == r}"
171:47-171:62::lq_anf$##7205759403792808525 :: "{v' : (Data.Set.Internal.Set [GHC.Types.Char]) | v' == Set_sng v}"
171:60-171:61::v :: "{v' : [GHC.Types.Char] | len v' >= 0\n                         && v' == v}"
172:27-172:85::$dOrd_a3iT :: "{v : (GHC.Classes.Ord [GHC.Types.Char]) | v == $dOrd_a3iT}"
172:35-172:45::lq_anf$##7205759403792808526 :: "{v : (Data.Set.Internal.Set [GHC.Types.Char]) | v == free t_x}"
172:41-172:44::t_x :: "{v : STLC.Type | v == t_x}"
172:46-172:85::lq_anf$##7205759403792808529 :: "(Data.Set.Internal.Set [GHC.Types.Char])"
172:60-172:68::lq_anf$##7205759403792808527 :: "{v : (Data.Set.Internal.Set [GHC.Types.Char]) | v == free t}"
172:66-172:67::t :: "{v : STLC.Type | v == t}"
172:69-172:84::lq_anf$##7205759403792808528 :: "{v : (Data.Set.Internal.Set [GHC.Types.Char]) | v == Set_sng x}"
172:82-172:83::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
173:27-173:85::$dOrd_a3iT :: "{v : (GHC.Classes.Ord [GHC.Types.Char]) | v == $dOrd_a3iT}"
173:35-173:45::lq_anf$##7205759403792808530 :: "{v : (Data.Set.Internal.Set [GHC.Types.Char]) | v == free t_x}"
173:41-173:44::t_x :: "{v : STLC.Type | v == t_x}"
173:46-173:85::lq_anf$##7205759403792808533 :: "(Data.Set.Internal.Set [GHC.Types.Char])"
173:60-173:68::lq_anf$##7205759403792808531 :: "{v : (Data.Set.Internal.Set [GHC.Types.Char]) | v == free t}"
173:66-173:67::t :: "{v : STLC.Type | v == t}"
173:69-173:84::lq_anf$##7205759403792808532 :: "{v : (Data.Set.Internal.Set [GHC.Types.Char]) | v == Set_sng x}"
173:82-173:83::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
180:1-180:7::tsubst :: "[GHC.Types.Char] -> {v : STLC.Expr | isValue v} -> x3:STLC.Type -> {t' : STLC.Type | tsize t' <= tsize x3\n                                                                                     && tsize t' >= 0}"
180:8-180:9::x :: "[GHC.Types.Char]"
180:32-180:39::TBase :: "x1:STLC.Base -> {v : STLC.Type | TBase##lqdc##$select v == x1\n                                 && tsize v == 0\n                                 && v == TBase x1}"
180:38-180:39::b :: "{v : STLC.Base | v == b}"
181:32-181:61::TRefn :: "x1:STLC.Base -> x2:[GHC.Types.Char] -> x3:STLC.Pred -> {v : STLC.Type | TRefn##lqdc##$select v == x3\n                                                                        && TRefn##lqdc##$select v == x2\n                                                                        && TRefn##lqdc##$select v == x1\n                                                                        && tsize v == 0\n                                                                        && v == TRefn x1 x2 x3}"
181:38-181:39::b :: "{v : STLC.Base | v == b}"
181:40-181:41::v :: "{v' : [GHC.Types.Char] | len v' >= 0\n                         && v' == v}"
181:42-181:61::lq_anf$##7205759403792808593 :: "STLC.Pred"
181:50-181:51::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
181:52-181:58::lq_anf$##7205759403792808592 :: "{v : STLC.Term | Ic##lqdc##$select v == n\n                 && v == Ic n}"
181:56-181:57::n :: "{v : GHC.Types.Int | v == n}"
181:59-181:60::r :: "{v : STLC.Pred | v == r}"
182:32-182:61::TRefn :: "x1:STLC.Base -> x2:[GHC.Types.Char] -> x3:STLC.Pred -> {v : STLC.Type | TRefn##lqdc##$select v == x3\n                                                                        && TRefn##lqdc##$select v == x2\n                                                                        && TRefn##lqdc##$select v == x1\n                                                                        && tsize v == 0\n                                                                        && v == TRefn x1 x2 x3}"
182:38-182:39::b :: "{v : STLC.Base | v == b}"
182:40-182:41::v :: "{v' : [GHC.Types.Char] | len v' >= 0\n                         && v' == v}"
182:42-182:61::lq_anf$##7205759403792808610 :: "STLC.Pred"
182:50-182:51::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
182:52-182:58::lq_anf$##7205759403792808609 :: "{v : STLC.Term | Iv##lqdc##$select v == y\n                 && v == Iv y}"
182:56-182:57::y :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == y}"
182:59-182:60::r :: "{v : STLC.Pred | v == r}"
183:32-183:43::TRefn :: "x1:STLC.Base -> x2:[GHC.Types.Char] -> x3:STLC.Pred -> {v : STLC.Type | TRefn##lqdc##$select v == x3\n                                                                        && TRefn##lqdc##$select v == x2\n                                                                        && TRefn##lqdc##$select v == x1\n                                                                        && tsize v == 0\n                                                                        && v == TRefn x1 x2 x3}"
183:38-183:39::b :: "{v : STLC.Base | v == b}"
183:40-183:41::v :: "{v' : [GHC.Types.Char] | len v' >= 0\n                         && v' == v}"
183:42-183:43::r :: "{v : STLC.Pred | v == r}"
184:32-184:71::TFunc :: "x1:[GHC.Types.Char] -> x2:STLC.Type -> x3:STLC.Type -> {v : STLC.Type | TFunc##lqdc##$select v == x3\n                                                                        && TFunc##lqdc##$select v == x2\n                                                                        && TFunc##lqdc##$select v == x1\n                                                                        && tsize v == tsize x3 + 1\n                                                                        && v == TFunc x1 x2 x3}"
184:38-184:39::z :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == z}"
184:40-184:56::lq_anf$##7205759403792808579 :: "{v : STLC.Type | tsize v <= tsize t_z\n                 && tsize v >= 0}"
184:48-184:49::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
184:50-184:51::ds_d3H4 :: "{v : STLC.Expr | isValue v}"
184:52-184:55::t_z :: "{v : STLC.Type | v == t_z}"
184:57-184:71::lq_anf$##7205759403792808580 :: "{v : STLC.Type | tsize v <= tsize t\n                 && tsize v >= 0}"
184:65-184:66::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
184:67-184:68::ds_d3H4 :: "{v : STLC.Expr | isValue v}"
184:69-184:70::t :: "{v : STLC.Type | v == t}"
185:32-185:73::TExists :: "x1:[GHC.Types.Char] -> x2:STLC.Type -> x3:STLC.Type -> {v : STLC.Type | TExists##lqdc##$select v == x3\n                                                                        && TExists##lqdc##$select v == x2\n                                                                        && TExists##lqdc##$select v == x1\n                                                                        && tsize v == tsize x3 + 1\n                                                                        && v == TExists x1 x2 x3}"
185:40-185:41::z :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == z}"
185:42-185:58::lq_anf$##7205759403792808581 :: "{v : STLC.Type | tsize v <= tsize t_z\n                 && tsize v >= 0}"
185:50-185:51::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
185:52-185:53::ds_d3H4 :: "{v : STLC.Expr | isValue v}"
185:54-185:57::t_z :: "{v : STLC.Type | v == t_z}"
185:59-185:73::lq_anf$##7205759403792808582 :: "{v : STLC.Type | tsize v <= tsize t\n                 && tsize v >= 0}"
185:67-185:68::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
185:69-185:70::ds_d3H4 :: "{v : STLC.Expr | isValue v}"
185:71-185:72::t :: "{v : STLC.Type | v == t}"
239:1-239:18::lemma_evals_trans :: "x1:STLC.Expr -> x2:STLC.Expr -> x3:STLC.Expr -> {v : STLC.EvalsTo | prop v == EvalsTo x1 x2} -> {v : STLC.EvalsTo | prop v == EvalsTo x2 x3} -> {v : STLC.EvalsTo | prop v == EvalsTo x1 x3}"
239:19-239:21::e1 :: "STLC.Expr"
239:22-239:24::e2 :: "STLC.Expr"
239:25-239:27::e3 :: "STLC.Expr"
239:39-239:45::p_e2e3 :: "{v : STLC.EvalsTo | prop v == EvalsTo e2 e3}"
239:48-239:54::p_e2e3 :: "{v : STLC.EvalsTo | prop v == EvalsTo e2 e3\n                    && v == p_e2e3}"
240:69-240:75::p_e1e3 :: "{v : STLC.EvalsTo | AddStep##lqdc##$select v == p_ee3\n                    && AddStep v == e3\n                    && AddStep##lqdc##$select v == p_e1e\n                    && AddStep v == e\n                    && AddStep v == e1\n                    && prop v == EvalsTo e1 e3\n                    && v == AddStep e1 e p_e1e e3 p_ee3\n                    && v == p_e1e3}"
242:5-242:11::p_e1e3 :: "{v : STLC.EvalsTo | AddStep##lqdc##$select v == p_ee3\n                    && AddStep v == e3\n                    && AddStep##lqdc##$select v == p_e1e\n                    && AddStep v == e\n                    && AddStep v == e1\n                    && prop v == EvalsTo e1 e3\n                    && v == AddStep e1 e p_e1e e3 p_ee3}"
242:14-242:41::_ :: "{v : STLC.EvalsTo | AddStep##lqdc##$select v == p_ee3\n                    && AddStep v == e3\n                    && AddStep##lqdc##$select v == p_e1e\n                    && AddStep v == e\n                    && AddStep v == e1\n                    && prop v == EvalsTo e1 e3\n                    && v == AddStep e1 e p_e1e e3 p_ee3}"
242:22-242:24::e1 :: "{v : STLC.Expr | v == e1}"
242:25-242:26::e :: "{v : STLC.Expr | v == e}"
242:27-242:32::p_e1e :: "{v : STLC.Step | prop v == Step _e1 e\n                 && v == p_e1e}"
242:33-242:35::e3 :: "{v : STLC.Expr | v == e3}"
242:36-242:41::p_ee3 :: "{v : STLC.EvalsTo | prop v == EvalsTo e e3\n                    && v == p_ee3}"
243:5-243:10::p_ee3 :: "{v : STLC.EvalsTo | prop v == EvalsTo e e3}"
243:14-243:52::lemma_evals_trans :: "x1:STLC.Expr -> x2:STLC.Expr -> x3:STLC.Expr -> {v : STLC.EvalsTo | prop v == EvalsTo x1 x2} -> {v : STLC.EvalsTo | prop v == EvalsTo x2 x3} -> {v : STLC.EvalsTo | prop v == EvalsTo x1 x3}"
243:32-243:33::e :: "{v : STLC.Expr | v == e}"
243:34-243:36::e2 :: "{v : STLC.Expr | v == e2}"
243:37-243:39::e3 :: "{v : STLC.Expr | v == e3}"
243:40-243:45::p_ee2 :: "{v : STLC.EvalsTo | prop v == EvalsTo e _e2\n                    && v == p_ee2}"
243:46-243:52::p_e2e3 :: "{v : STLC.EvalsTo | prop v == EvalsTo e2 e3\n                    && v == p_e2e3}"
248:1-248:15::lemma_app_many :: "x1:STLC.Expr -> x2:STLC.Expr -> x3:STLC.Expr -> {v : STLC.EvalsTo | prop v == EvalsTo x1 x2} -> {v : STLC.EvalsTo | prop v == EvalsTo (App x1 x3) (App x2 x3)}"
248:16-248:17::e :: "STLC.Expr"
248:18-248:20::e' :: "STLC.Expr"
248:21-248:22::v :: "STLC.Expr"
248:35-248:49::Refl :: "x1:STLC.Expr -> {v : STLC.EvalsTo | Refl v == x1\n                                    && prop v == EvalsTo x1 x1\n                                    && v == Refl x1}"
248:40-248:49::lq_anf$##7205759403792808667 :: "{v' : STLC.Expr | App##lqdc##$select v' == v\n                  && App##lqdc##$select v' == e\n                  && v' == App e v}"
248:45-248:46::e :: "{v : STLC.Expr | v == e}"
248:47-248:48::v :: "{v' : STLC.Expr | v' == v}"
249:58-249:66::p_ev_e'v :: "{v : STLC.EvalsTo | AddStep##lqdc##$select v == p_e1v_e'v\n                    && AddStep##lqdc##$select v == s_ev_e1v\n                    && v == p_ev_e'v}"
251:5-251:13::p_ev_e'v :: "{v : STLC.EvalsTo | AddStep##lqdc##$select v == p_e1v_e'v\n                    && AddStep##lqdc##$select v == s_ev_e1v}"
251:17-251:75::_ :: "{v : STLC.EvalsTo | AddStep##lqdc##$select v == p_e1v_e'v\n                    && AddStep##lqdc##$select v == s_ev_e1v}"
251:25-251:34::lq_anf$##7205759403792808668 :: "{v' : STLC.Expr | App##lqdc##$select v' == v\n                  && App##lqdc##$select v' == e\n                  && v' == App e v}"
251:30-251:31::e :: "{v : STLC.Expr | v == e}"
251:32-251:33::v :: "{v' : STLC.Expr | v' == v}"
251:35-251:45::lq_anf$##7205759403792808669 :: "{v' : STLC.Expr | App##lqdc##$select v' == v\n                  && App##lqdc##$select v' == e1\n                  && v' == App e1 v}"
251:40-251:42::e1 :: "{v : STLC.Expr | v == e1}"
251:43-251:44::v :: "{v' : STLC.Expr | v' == v}"
251:46-251:54::s_ev_e1v :: "{v' : STLC.Step | EApp1 v' == v\n                  && EApp1##lqdc##$select v' == s_ee1\n                  && EApp1 v' == e1\n                  && EApp1 v' == e\n                  && prop v' == Step (App e v) (App e1 v)\n                  && v' == EApp1 e e1 s_ee1 v\n                  && v' == s_ev_e1v}"
251:55-251:65::lq_anf$##7205759403792808670 :: "{v' : STLC.Expr | App##lqdc##$select v' == v\n                  && App##lqdc##$select v' == e'\n                  && v' == App e' v}"
251:60-251:62::e' :: "{v : STLC.Expr | v == e'}"
251:63-251:64::v :: "{v' : STLC.Expr | v' == v}"
251:66-251:75::p_e1v_e'v :: "{v' : STLC.EvalsTo | prop v' == EvalsTo (App e1 v) (App e' v)\n                     && v' == p_e1v_e'v}"
252:5-252:13::s_ev_e1v :: "{v' : STLC.Step | EApp1 v' == v\n                  && EApp1##lqdc##$select v' == s_ee1\n                  && EApp1 v' == e1\n                  && EApp1 v' == e\n                  && prop v' == Step (App e v) (App e1 v)\n                  && v' == EApp1 e e1 s_ee1 v}"
252:17-252:35::_ :: "{v' : STLC.Step | EApp1 v' == v\n                  && EApp1##lqdc##$select v' == s_ee1\n                  && EApp1 v' == e1\n                  && EApp1 v' == e\n                  && prop v' == Step (App e v) (App e1 v)\n                  && v' == EApp1 e e1 s_ee1 v}"
252:23-252:24::e :: "{v : STLC.Expr | v == e}"
252:25-252:27::e1 :: "{v : STLC.Expr | v == e1}"
252:28-252:33::s_ee1 :: "{v : STLC.Step | prop v == Step _e e1\n                 && v == s_ee1}"
252:34-252:35::v :: "{v' : STLC.Expr | v' == v}"
253:5-253:14::p_e1v_e'v :: "{v' : STLC.EvalsTo | prop v' == EvalsTo (App e1 v) (App e' v)}"
253:17-253:46::lemma_app_many :: "x1:STLC.Expr -> x2:STLC.Expr -> x3:STLC.Expr -> {v : STLC.EvalsTo | prop v == EvalsTo x1 x2} -> {v : STLC.EvalsTo | prop v == EvalsTo (App x1 x3) (App x2 x3)}"
253:32-253:34::e1 :: "{v : STLC.Expr | v == e1}"
253:35-253:37::e' :: "{v : STLC.Expr | v == e'}"
253:38-253:39::v :: "{v' : STLC.Expr | v' == v}"
253:40-253:46::p_e1e' :: "{v : STLC.EvalsTo | prop v == EvalsTo e1 _e'\n                    && v == p_e1e'}"
298:1-298:16::lemma_soundness :: "x1:STLC.Expr -> x2:STLC.Expr -> {v : STLC.EvalsTo | prop v == EvalsTo x1 x2} -> x4:STLC.BType -> {v : STLC.HasBType | prop v == HasBType BEmpty x1 x4} -> {v : STLC.HasBType | prop v == HasBType BEmpty x2 x4}"
298:17-298:18::e :: "STLC.Expr"
298:19-298:21::e' :: "STLC.Expr"
298:22-298:27::p_ee' :: "STLC.EvalsTo"
298:28-298:29::b :: "STLC.BType"
298:30-298:34::p_eb :: "STLC.HasBType"
427:1-427:11::lemma1_fwd :: "x1:STLC.Expr -> x2:STLC.Expr -> {v : STLC.EvalsTo | prop v == EvalsTo x1 x2} -> x4:STLC.Type -> {v : STLC.Denotes | prop v == Denotes x4 x1} -> {v : STLC.Denotes | prop v == Denotes x4 x2}"
427:12-427:13::e :: "STLC.Expr"
427:14-427:16::e' :: "STLC.Expr"
427:17-427:22::p_ee' :: "{v : STLC.EvalsTo | prop v == EvalsTo e e'}"
427:54-427:70::DBase :: "x1:STLC.Base -> x2:STLC.Expr -> x3:{v : STLC.HasBType | prop v == HasBType BEmpty x2 (BTBase x1)} -> {v : STLC.Denotes | DBase##lqdc##$select v == x3\n                                                                                                                         && DBase v == x2\n                                                                                                                         && DBase v == x1\n                                                                                                                         && prop v == Denotes (TBase x1) x2\n                                                                                                                         && v == DBase x1 x2 x3}"
427:60-427:61::b :: "{v : STLC.Base | v == b}"
427:62-427:64::e' :: "{v : STLC.Expr | v == e'}"
427:65-427:70::p_e'b :: "{v : STLC.HasBType | v == p_e'b}"
429:5-429:10::p_e'b :: "STLC.HasBType"
429:26-429:68::_ :: "STLC.HasBType"
429:42-429:43::e :: "{v : STLC.Expr | v == e}"
429:44-429:46::e' :: "{v : STLC.Expr | v == e'}"
429:47-429:52::p_ee' :: "{v : STLC.EvalsTo | prop v == EvalsTo e e'\n                    && v == p_ee'}"
429:53-429:63::lq_anf$##7205759403792808695 :: "{v : STLC.BType | BTBase##lqdc##$select v == b\n                  && v == BTBase b}"
429:61-429:62::b :: "{v : STLC.Base | v == b}"
429:64-429:68::p_eb :: "{v : STLC.HasBType | prop v == HasBType BEmpty _e (BTBase b)\n                     && v == p_eb}"
430:74-430:81::den_te' :: "{v : STLC.Denotes | DRefn##lqdc##$select v == predicate2\n                    && DRefn##lqdc##$select v == p_e'b\n                    && DRefn v == e'\n                    && DRefn v == p\n                    && DRefn v == x\n                    && DRefn v == b\n                    && prop v == Denotes (TRefn b x p) e'\n                    && v == DRefn b x p e' p_e'b predicate2\n                    && v == den_te'}"
432:5-432:12::den_te' :: "{v : STLC.Denotes | DRefn##lqdc##$select v == predicate2\n                    && DRefn##lqdc##$select v == p_e'b\n                    && DRefn v == e'\n                    && DRefn v == p\n                    && DRefn v == x\n                    && DRefn v == b\n                    && prop v == Denotes (TRefn b x p) e'\n                    && v == DRefn b x p e' p_e'b predicate2}"
432:26-432:57::_ :: "{v : STLC.Denotes | DRefn##lqdc##$select v == predicate2\n                    && DRefn##lqdc##$select v == p_e'b\n                    && DRefn v == e'\n                    && DRefn v == p\n                    && DRefn v == x\n                    && DRefn v == b\n                    && prop v == Denotes (TRefn b x p) e'\n                    && v == DRefn b x p e' p_e'b predicate2}"
432:32-432:33::b :: "{v : STLC.Base | v == b}"
432:34-432:35::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
432:36-432:37::p :: "{v : STLC.Pred | v == p}"
432:38-432:40::e' :: "{v : STLC.Expr | v == e'}"
432:41-432:46::p_e'b :: "{v : STLC.HasBType | v == p_e'b}"
432:47-432:57::predicate2 :: "x1:GHC.Types.Int -> {v : STLC.EvalsTo | prop v == EvalsTo e' (C x1)} -> {v : STLC.BEvalsTo | prop v == BEvalsTo (bsubst x (Ic x1) p) (Bc true)}"
433:5-433:10::p_e'b :: "STLC.HasBType"
433:26-433:68::_ :: "STLC.HasBType"
433:42-433:43::e :: "{v : STLC.Expr | v == e}"
433:44-433:46::e' :: "{v : STLC.Expr | v == e'}"
433:47-433:52::p_ee' :: "{v : STLC.EvalsTo | prop v == EvalsTo e e'\n                    && v == p_ee'}"
433:53-433:63::lq_anf$##7205759403792808720 :: "{v : STLC.BType | BTBase##lqdc##$select v == b\n                  && v == BTBase b}"
433:61-433:62::b :: "{v : STLC.Base | v == b}"
433:64-433:68::p_eb :: "{v : STLC.HasBType | prop v == HasBType BEmpty _e (BTBase b)\n                     && v == p_eb}"
437:5-437:15::predicate2 :: "x1:GHC.Types.Int -> {v : STLC.EvalsTo | prop v == EvalsTo e' (C x1)} -> {v : STLC.BEvalsTo | prop v == BEvalsTo (bsubst x (Ic x1) p) (Bc true)}"
437:16-437:17::v :: "GHC.Types.Int"
437:18-437:23::p_e'v :: "{v : STLC.EvalsTo | prop v == EvalsTo e' (C v)}"
437:26-437:80::predicate :: "x1:GHC.Types.Int -> {v : STLC.EvalsTo | prop v == EvalsTo _e (C x1)} -> {v : STLC.BEvalsTo | prop v == BEvalsTo (bsubst x (Ic x1) p) (Bc True)}"
437:36-437:37::v :: "{v' : GHC.Types.Int | v' == v}"
437:38-437:80::lq_anf$##7205759403792808719 :: "STLC.EvalsTo"
437:57-437:58::e :: "{v : STLC.Expr | v == e}"
437:59-437:61::e' :: "{v : STLC.Expr | v == e'}"
437:62-437:67::lq_anf$##7205759403792808718 :: "{v' : STLC.Expr | C##lqdc##$select v' == v\n                  && v' == C v}"
437:65-437:66::v :: "{v' : GHC.Types.Int | v' == v}"
437:68-437:73::p_ee' :: "{v : STLC.EvalsTo | prop v == EvalsTo e e'\n                    && v == p_ee'}"
437:74-437:79::p_e'v :: "{v' : STLC.EvalsTo | prop v' == EvalsTo e' (C v)\n                     && v' == p_e'v}"
438:76-438:83::den_te' :: "{v : STLC.Denotes | DFunc##lqdc##$select v == app_den'\n                    && DFunc##lqdc##$select v == p_e'bt\n                    && DFunc v == e'\n                    && DFunc v == t\n                    && DFunc v == t_x\n                    && DFunc v == x\n                    && prop v == Denotes (TFunc x t_x t) e'\n                    && v == DFunc x t_x t e' p_e'bt app_den'\n                    && v == den_te'}"
440:5-440:12::den_te' :: "{v : STLC.Denotes | DFunc##lqdc##$select v == app_den'\n                    && DFunc##lqdc##$select v == p_e'bt\n                    && DFunc v == e'\n                    && DFunc v == t\n                    && DFunc v == t_x\n                    && DFunc v == x\n                    && prop v == Denotes (TFunc x t_x t) e'\n                    && v == DFunc x t_x t e' p_e'bt app_den'}"
440:24-440:56::_ :: "{v : STLC.Denotes | DFunc##lqdc##$select v == app_den'\n                    && DFunc##lqdc##$select v == p_e'bt\n                    && DFunc v == e'\n                    && DFunc v == t\n                    && DFunc v == t_x\n                    && DFunc v == x\n                    && prop v == Denotes (TFunc x t_x t) e'\n                    && v == DFunc x t_x t e' p_e'bt app_den'}"
440:30-440:31::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
440:32-440:35::t_x :: "{v : STLC.Type | v == t_x}"
440:36-440:37::t :: "{v : STLC.Type | v == t}"
440:38-440:40::e' :: "{v : STLC.Expr | v == e'}"
440:41-440:47::p_e'bt :: "{v : STLC.HasBType | v == p_e'bt}"
440:48-440:56::app_den' :: "STLC.Expr -> STLC.Denotes -> STLC.Denotes"
441:5-441:11::p_e'bt :: "STLC.HasBType"
441:24-441:80::_ :: "STLC.HasBType"
441:40-441:41::e :: "{v : STLC.Expr | v == e}"
441:42-441:44::e' :: "{v : STLC.Expr | v == e'}"
441:45-441:50::p_ee' :: "{v : STLC.EvalsTo | prop v == EvalsTo e e'\n                    && v == p_ee'}"
441:51-441:74::lq_anf$##7205759403792808744 :: "STLC.BType"
441:58-441:73::lq_anf$##7205759403792808743 :: "{v : STLC.Type | TFunc##lqdc##$select v == t\n                 && TFunc##lqdc##$select v == t_x\n                 && TFunc##lqdc##$select v == x\n                 && tsize v == tsize t + 1\n                 && v == TFunc x t_x t}"
441:65-441:66::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
441:67-441:70::t_x :: "{v : STLC.Type | v == t_x}"
441:71-441:72::t :: "{v : STLC.Type | v == t}"
441:75-441:80::p_ebt :: "{v : STLC.HasBType | prop v == HasBType BEmpty _e (erase (TFunc x t_x t))\n                     && v == p_ebt}"
442:5-442:13::app_den' :: "STLC.Expr -> STLC.Denotes -> STLC.Denotes"
442:14-442:15::v :: "STLC.Expr"
442:16-442:21::d_txv :: "STLC.Denotes"
442:24-442:84::lemma1_fwd :: "x1:STLC.Expr -> x2:STLC.Expr -> {v : STLC.EvalsTo | prop v == EvalsTo x1 x2} -> x4:STLC.Type -> {v : STLC.Denotes | prop v == Denotes x4 x1} -> {v : STLC.Denotes | prop v == Denotes x4 x2}"
442:35-442:44::lq_anf$##7205759403792808740 :: "{v' : STLC.Expr | App##lqdc##$select v' == v\n                  && App##lqdc##$select v' == e\n                  && v' == App e v}"
442:40-442:41::e :: "{v : STLC.Expr | v == e}"
442:42-442:43::v :: "{v' : STLC.Expr | v' == v}"
442:45-442:55::lq_anf$##7205759403792808741 :: "{v' : STLC.Expr | App##lqdc##$select v' == v\n                  && App##lqdc##$select v' == e'\n                  && v' == App e' v}"
442:50-442:52::e' :: "{v : STLC.Expr | v == e'}"
442:53-442:54::v :: "{v' : STLC.Expr | v' == v}"
442:56-442:64::p_ev_e'v :: "{v' : STLC.EvalsTo | prop v' == EvalsTo (App e v) (App e' v)\n                     && v' == p_ev_e'v}"
442:65-442:79::lq_anf$##7205759403792808742 :: "{v' : STLC.Type | tsize v' <= tsize t\n                  && tsize v' >= 0\n                  && v' == tsubst x v t}"
442:73-442:74::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
442:75-442:76::v :: "{v' : STLC.Expr | v' == v}"
442:77-442:78::t :: "{v : STLC.Type | v == t}"
442:80-442:84::dtev :: "{v' : STLC.Denotes | prop v' == Denotes (tsubst x v t) (App _e v)\n                     && v' == app_den v d_txv\n                     && v' == dtev}"
444:9-444:17::p_ev_e'v :: "{v' : STLC.EvalsTo | prop v' == EvalsTo (App e v) (App e' v)}"
444:24-444:53::lemma_app_many :: "x1:STLC.Expr -> x2:STLC.Expr -> x3:STLC.Expr -> {v : STLC.EvalsTo | prop v == EvalsTo x1 x2} -> {v : STLC.EvalsTo | prop v == EvalsTo (App x1 x3) (App x2 x3)}"
444:40-444:41::e :: "{v : STLC.Expr | v == e}"
444:42-444:44::e' :: "{v : STLC.Expr | v == e'}"
444:45-444:46::v :: "{v' : STLC.Expr | v' == v}"
444:47-444:52::p_ee' :: "{v : STLC.EvalsTo | prop v == EvalsTo e e'\n                    && v == p_ee'}"
445:9-445:13::dtev :: "{v' : STLC.Denotes | prop v' == Denotes (tsubst x v t) (App _e v)\n                     && v' == app_den v d_txv}"
445:24-445:39::_ :: "{v' : STLC.Denotes | prop v' == Denotes (tsubst x v t) (App _e v)\n                     && v' == app_den v d_txv}"
445:32-445:33::v :: "{v' : STLC.Expr | v' == v}"
445:34-445:39::d_txv :: "{v : STLC.Denotes | v == d_txv}"
446:83-446:88::d_te' :: "{v' : STLC.Denotes | DExis##lqdc##$select v' == den_te'\n                     && DExis##lqdc##$select v' == d_txv\n                     && DExis v' == v\n                     && DExis##lqdc##$select v' == p_e'bt\n                     && DExis v' == e'\n                     && DExis v' == t\n                     && DExis v' == t_x\n                     && DExis v' == x\n                     && prop v' == Denotes (TExists x t_x t) e'\n                     && v' == DExis x t_x t e' p_e'bt v d_txv den_te'\n                     && v' == d_te'}"
448:5-448:10::d_te' :: "{v' : STLC.Denotes | DExis##lqdc##$select v' == den_te'\n                     && DExis##lqdc##$select v' == d_txv\n                     && DExis v' == v\n                     && DExis##lqdc##$select v' == p_e'bt\n                     && DExis v' == e'\n                     && DExis v' == t\n                     && DExis v' == t_x\n                     && DExis v' == x\n                     && prop v' == Denotes (TExists x t_x t) e'\n                     && v' == DExis x t_x t e' p_e'bt v d_txv den_te'}"
448:17-448:56::_ :: "{v' : STLC.Denotes | DExis##lqdc##$select v' == den_te'\n                     && DExis##lqdc##$select v' == d_txv\n                     && DExis v' == v\n                     && DExis##lqdc##$select v' == p_e'bt\n                     && DExis v' == e'\n                     && DExis v' == t\n                     && DExis v' == t_x\n                     && DExis v' == x\n                     && prop v' == Denotes (TExists x t_x t) e'\n                     && v' == DExis x t_x t e' p_e'bt v d_txv den_te'}"
448:23-448:24::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
448:25-448:28::t_x :: "{v : STLC.Type | v == t_x}"
448:29-448:30::t :: "{v : STLC.Type | v == t}"
448:31-448:33::e' :: "{v : STLC.Expr | v == e'}"
448:34-448:40::p_e'bt :: "{v : STLC.HasBType | v == p_e'bt}"
448:41-448:42::v :: "{v' : STLC.Expr | isValue v'\n                  && v' == v}"
448:43-448:48::d_txv :: "{v' : STLC.Denotes | prop v' == Denotes t_x v\n                     && v' == d_txv}"
448:49-448:56::den_te' :: "{v : STLC.Denotes | v == den_te'}"
449:5-449:11::p_e'bt :: "STLC.HasBType"
449:17-449:75::_ :: "STLC.HasBType"
449:33-449:34::e :: "{v : STLC.Expr | v == e}"
449:35-449:37::e' :: "{v : STLC.Expr | v == e'}"
449:38-449:43::p_ee' :: "{v : STLC.EvalsTo | prop v == EvalsTo e e'\n                    && v == p_ee'}"
449:44-449:69::lq_anf$##7205759403792808766 :: "STLC.BType"
449:51-449:68::lq_anf$##7205759403792808765 :: "{v : STLC.Type | TExists##lqdc##$select v == t\n                 && TExists##lqdc##$select v == t_x\n                 && TExists##lqdc##$select v == x\n                 && tsize v == tsize t + 1\n                 && v == TExists x t_x t}"
449:60-449:61::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
449:62-449:65::t_x :: "{v : STLC.Type | v == t_x}"
449:66-449:67::t :: "{v : STLC.Type | v == t}"
449:70-449:75::p_ebt :: "{v : STLC.HasBType | prop v == HasBType BEmpty _e (erase t)\n                     && v == p_ebt}"
450:5-450:12::den_te' :: "STLC.Denotes"
450:17-450:58::lemma1_fwd :: "x1:STLC.Expr -> x2:STLC.Expr -> {v : STLC.EvalsTo | prop v == EvalsTo x1 x2} -> x4:STLC.Type -> {v : STLC.Denotes | prop v == Denotes x4 x1} -> {v : STLC.Denotes | prop v == Denotes x4 x2}"
450:28-450:29::e :: "{v : STLC.Expr | v == e}"
450:30-450:32::e' :: "{v : STLC.Expr | v == e'}"
450:33-450:38::p_ee' :: "{v : STLC.EvalsTo | prop v == EvalsTo e e'\n                    && v == p_ee'}"
450:39-450:53::lq_anf$##7205759403792808764 :: "{v' : STLC.Type | tsize v' <= tsize t\n                  && tsize v' >= 0\n                  && v' == tsubst x v t}"
450:47-450:48::x :: "{v : [GHC.Types.Char] | len v >= 0\n                        && v == x}"
450:49-450:50::v :: "{v' : STLC.Expr | isValue v'\n                  && v' == v}"
450:51-450:52::t :: "{v : STLC.Type | v == t}"
450:54-450:58::d_te :: "{v' : STLC.Denotes | prop v' == Denotes (tsubst x v t) _e\n                     && v' == d_te}"
455:1-455:11::lemma1_bck :: "x1:STLC.Expr -> x2:STLC.Expr -> {v : STLC.EvalsTo | prop v == EvalsTo x1 x2} -> x4:STLC.Type -> {v : STLC.Denotes | prop v == Denotes x4 x2} -> {v : STLC.Denotes | prop v == Denotes x4 x1}"